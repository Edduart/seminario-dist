"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const enrollment_controller_1 = require("../enrollment/enrollment.controller");
const datasource_1 = require("../../infrastructure/datasource/");
const repositories_1 = require("../../infrastructure/repositories/");
const TokenValidator_1 = require("../services/TokenValidator");
const router = (0, express_1.Router)();
const dataSource = new datasource_1.EnrollmentDataSourceImpl();
const enrollmentRepository = new repositories_1.EnrollmentRepositoryImpl(dataSource);
const enrollmentController = new enrollment_controller_1.EnrollmentController(enrollmentRepository);
router.get("/count", TokenValidator_1.ValidatorTo.ValidarToken, enrollmentController.Getcounts);
router.get("/academic-status/:seminarian_id", TokenValidator_1.ValidatorTo.ValidarToken, enrollmentController.getAcademicStatus);
router.get("/seminarian-stage/", TokenValidator_1.ValidatorTo.ValidarToken, enrollmentController.getStageOfSeminarian);
router.get("/equivalency-list/:seminarian_id", TokenValidator_1.ValidatorTo.ValidarToken, enrollmentController.getSubjectAllowToEnrollEquivalency);
router.get("/seminarian-academic-term/", TokenValidator_1.ValidatorTo.ValidarToken, enrollmentController.getAcademicTermByEnrollment);
router.post("/create-by-equivalence/", TokenValidator_1.ValidatorTo.ValidarToken, enrollmentController.createEnrollmentByEquivalence);
router.post("/", TokenValidator_1.ValidatorTo.ValidarToken, enrollmentController.create);
router.get("/", TokenValidator_1.ValidatorTo.ValidarToken, enrollmentController.get);
router.put("/:id", TokenValidator_1.ValidatorTo.ValidarToken, enrollmentController.update);
router.delete("/:id", TokenValidator_1.ValidatorTo.ValidarToken, enrollmentController.delete);
module.exports = router;
